---

- name: Create Midwife-EMR-TLS directories
  file:
    dest: /srv/midwife-emr-tls/pki/
    recurse: yes
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go="

- name: Install Midwife-EMR-TLS CA config file
  copy:
    src: roles/midwife-emr-tls/files/ca.conf
    dest: /srv/midwife-emr-tls/pki/
    owner: root
    group: root
    mode: "u=rw,go="

- name: Install Midwife-EMR-TLS Server config file
  copy:
    src: roles/midwife-emr-tls/files/servercsr.conf
    dest: /srv/midwife-emr-tls/pki/
    owner: root
    group: root
    mode: "u=rw,go="

- name: Install Midwife-EMR-TLS command file
  copy:
    src: roles/midwife-emr-tls/files/manage-midwife-emr-tls
    dest: /srv/midwife-emr-tls/pki/
    owner: root
    group: root
    mode: "u=rwx,go="

- name: Create a password for the CA
  shell: openssl rand 20|openssl base64
  args:
    creates: /srv/midwife-emr-tls/pki/capw.txt
  register: ca_password

- name: Save the password for the CA
  shell: echo "{{ ca_password.stdout }}" > /srv/midwife-emr-tls/pki/capw.txt
  when: ca_password.changed == true
  register: ca_password_saved

- name: Set permissions on the password file
  file:
    path: /srv/midwife-emr-tls/pki/capw.txt
    owner: root
    group: root
    mode: "u=rw,go="

- name: Install Midwife-EMR-TLS service file
  copy:
    src: roles/midwife-emr-tls/files/midwife-emr-tls.conf
    dest: /etc/init/
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Create the directory for TLS certificates/keys for Nginx
  file:
    path: /etc/nginx/ssl
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go="

- name: Restart ODroid
  command: /sbin/shutdown -r now
  async: 0
  poll: 0
  ignore_errors: true
  when: ca_password_saved.changed == true

- name: "Wait for network to come back after reboot: {{ inventory_hostname }}"
  local_action:
    wait_for host={{ inventory_hostname }} port=22 search_regex=OpenSSH state=started delay=10 connect_timeout=10 timeout=120
  become: false
  when: ca_password_saved.changed == true

