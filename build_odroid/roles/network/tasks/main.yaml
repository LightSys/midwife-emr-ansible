---
- name: Optionally install the static eth0 configuration
  template:
    src: roles/network/files/eth0-static.j2
    dest: /etc/network/interfaces.d/eth0
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_eth0_installed
  when:
    - eth0_address != ""
    - eth0_mask != ""
    - eth0_gateway != ""
    - eth0_nameservers != ""

- name: Optionally install the dynamic eth0 configuration
  copy:
    src: roles/network/files/eth0-auto
    dest: /etc/network/interfaces.d/eth0
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_eth0_installed
  when:
    - eth0_address == ""
    - eth0_mask == ""
    - eth0_gateway == ""
    - eth0_nameservers == ""

- name: Install wlan0 configuration
  copy:
    src: roles/network/files/wlan0
    dest: /etc/network/interfaces.d/wlan0
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_wlan0_installed

- name: Change from source-directory to source in interfaces for Ubuntu 16.04
  copy:
    src: roles/network/files/interfaces
    dest: /etc/network/interfaces
    mode: "u=rw,go=r"
    owner: root
    group: root

- name: Disable the isc-dhcp-server because we are using dnsmasq
  command: systemctl disable isc-dhcp-server

- name: Install the dnsmasq configuration
  copy:
    src: roles/network/files/dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    backup: yes
    mode: u=rw,go=r
    owner: root
    group: root

# See: https://w1.fi/releases/hostapd-2.6.tar.gz
# See: https://wiki.odroid.com/accessory/connectivity/wifi/wlan_ap
- name: Copy and unarchive hostapd source
  unarchive:
    src: roles/network/files/hostapd-2.6.tar.gz
    dest: "{{ download_dir }}"

- name: Base configuration of hostapd source
  command: cp defconfig .config
  args:
    chdir: "{{ download_dir }}/hostapd-2.6/hostapd"
    creates: "{{ download_dir }}/hostapd-2.6/hostapd/.config"

- name: Additional configuration of hostapd source
  blockinfile:
    dest: "{{ download_dir }}/hostapd-2.6/hostapd/.config"
    insertafter: EOF
    state: present
    block: |
      CONFIG_LIBNL32=y
      CONFIG_IEEE80211N=y
      CONFIG_IEEE80211AC=y

- name: Compilation of hostapd
  shell: make
  args:
    chdir: "{{ download_dir }}/hostapd-2.6/hostapd"
    creates: "{{ download_dir }}/hostapd-2.6/hostapd/hostapd"

- name: Determine if hostapd daemon needs to be replaced
  stat:
    path: /usr/sbin/hostapd.old
  register: hostapd_old_status

- name: Determine if hostapd client needs to be replaced
  stat:
    path: /usr/sbin/hostapd_cli.old
  register: hostapd_cli_old_status

- name: Backup the original hostapd daemon
  command: cp /usr/sbin/hostapd /usr/sbin/hostapd.old
  args:
    creates: /usr/sbin/hostapd.old

- name: Backup the original hostapd client
  command: cp /usr/sbin/hostapd_cli /usr/sbin/hostapd_cli.old
  args:
    creates: /usr/sbin/hostapd_cli.old

- name: Replace the hostapd daemon with a newer version
  command: cp ./hostapd /usr/sbin/
  args:
    chdir: "{{ download_dir }}/hostapd-2.6/hostapd"
  when: hostapd_old_status is defined and hostapd_old_status.stat.exists == False

- name: Replace the hostapd client with a newer version
  command: cp ./hostapd_cli /usr/sbin/
  args:
    chdir: "{{ download_dir }}/hostapd-2.6/hostapd"
  when: hostapd_cli_old_status is defined and hostapd_cli_old_status.stat.exists == False

- name: Set config for hostapd in default
  copy:
    src: roles/network/files/hostapd
    dest: /etc/default/hostapd
    mode: u=rw,go=r
    owner: root
    group: root

- name: Set configuration of hostapd
  copy:
    src: roles/network/files/hostapd.conf
    dest: /etc/hostapd/hostapd.conf
    mode: u=rw,go=r
    owner: root
    group: root

- name: Copy in sysctl.conf
  copy:
    src: roles/network/files/sysctl.conf
    dest: /etc/sysctl.conf
    mode: u=rw,go=r
    owner: root
    group: root

- name: Force Network Manager to not manage wlan0
  copy:
    src: roles/network/files/network-manager-ignore-wlan0.conf
    dest: /etc/NetworkManager/conf.d/network-manager-ignore-wlan0.conf
    mode: u=rw,go=r
    owner: root
    group: root

- name: Add rfkill command to rc.local
  blockinfile:
    dest: /etc/rc.local
    insertbefore: exit 0
    state: present
    marker_begin: "Begin rfkill"
    marker_end: "End rfkill"
    block: |
      # Seems to need a sleep in order for this to take proper effect.
      /usr/bin/logger -t rc.local "Sleeping in rc.local for 30 seconds before applying rfkill."
      sleep 30
      rfkill unblock wlan
      /usr/bin/logger -t rc.local "'rfkill unblock wlan' complete"

- name: Add iptables rules to rc.local
  blockinfile:
    dest: /etc/rc.local
    state: present
    insertafter: End rfkill
    marker_begin: "Begin iptables"
    marker_end: "End iptables"
    block: |
      /usr/bin/logger -t rc.local "Applying iptables to allow Internet traffic from eth0 for wlan0 clients."
      iptables -F
      iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
      iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
      iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT
      /usr/bin/logger -t rc.local  "iptables complete"

- name: Restart ODroid
  command: /sbin/shutdown -r now
  async: 0
  poll: 0
  ignore_errors: true
  when: (was_eth0_installed.changed == true) or (was_wlan0_installed.changed == true)

- name: "Wait for network to come back after reboot: {{ inventory_hostname }}"
  local_action:
    wait_for host={{ inventory_hostname }} port=22 search_regex=OpenSSH state=started delay=30 connect_timeout=10 timeout=120
  become: false
  when: (was_eth0_installed.changed == true) or (was_wlan0_installed.changed == true)
