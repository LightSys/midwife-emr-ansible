---
- name: Install eth0 configuration
  copy:
    src: roles/network/files/eth0
    dest: /etc/network/interfaces.d/eth0
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_eth0_installed

- name: Install wlan0 configuration
  copy:
    src: roles/network/files/wlan0
    dest: /etc/network/interfaces.d/wlan0
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_wlan0_installed

- name: Install interfaces file
  copy:
    src: roles/network/files/interfaces
    dest: /etc/network/interfaces
    mode: "u=rw,go=r"
    owner: root
    group: root
  register: was_interfaces_installed

- name: Install udev rules for handling wifi modules
  copy:
    src: roles/network/files/realtek-wifi-module3.rules
    dest: /etc/udev/rules.d
    mode: "u=rw,go=r"
    owner: root
    group: root

- name: Edit the dhcpd configuration file
  blockinfile:
    dest: /etc/dhcp/dhcpd.conf
    block: |
      ### Adapted per instructions:
      ### http://forum.odroid.com/viewtopic.php?f=52&t=9102
      subnet 192.168.222.0 netmask 255.255.255.0 {
          range 192.168.222.50 192.168.222.100;
          option broadcast-address 192.168.222.255;
          option routers 192.168.222.1;
          default-lease-time 600;
          max-lease-time 7200;
          option domain-name "midwife-emr.local";
          option domain-name-servers 8.8.8.8;
      }
      # Allow Midwife-EMR to be a DHCP server for the 20 network.
      # Note that we no longer require Midwife-EMR to also run
      # dns-masq since Midwife-EMR now uses IP address only rather
      # than hostname.
      subnet 192.168.20.0 netmask 255.255.255.0 {
          range 192.168.20.50 192.168.20.250;
          option routers 192.168.20.1;
          option domain-name-servers 8.8.8.8;
      }
    insertafter: EOF
    state: present

- name: Set authoritative for the dhcpd configuration file
  lineinfile:
    dest: /etc/dhcp/dhcpd.conf
    regexp: authoritative;
    line: authoritative;

- name: Edit the isc-dhcp-server configuration file
  lineinfile:
    dest: /etc/default/isc-dhcp-server
    regexp: ^INTERFACES=
    line: INTERFACES="wlan0 eth0"
    state: present

- name: Edit sysctl configuration file
  blockinfile:
    dest: /etc/sysctl.conf
    block: |
      ### Setup per instructions at:
      ### http://forum.odroid.com/viewtopic.php?f=52&t=9102
      net.ipv4.ip_forward=1
    insertafter: EOF
    state: present

- name: Activate the port forwarding now
  shell: echo 1 > /proc/sys/net/ipv4/ip_forward

- name: Install hostapd
  unarchive:
    src: "roles/network/files/hostapd_realtek.tar"
    copy: yes
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: "u=rwx,go=rx"
    creates: /usr/local/bin/hostapd

- name: Create hostapd configuration directory
  file:
    path: /etc/hostapd
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: Install the hostapd configuration file for wlan0
  copy:
    src: roles/network/files/hostapd.conf
    dest: /etc/hostapd
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Bring everything up when it boots
  blockinfile:
    dest: /etc/rc.local
    block: |
      ### Per instructions adapted from various places.
      ### http://forum.odroid.com/viewtopic.php?f=52&t=9102
      ifup wlan0
      service isc-dhcp-server restart
      /usr/local/bin/hostapd /etc/hostapd/hostapd.conf &
    insertbefore: "exit 0"
    state: present

- name: Restart ODroid
  command: /sbin/shutdown -r now
  async: 0
  poll: 0
  ignore_errors: true
  when: (was_eth0_installed.changed == true) or (was_wlan0_installed.changed == true) or (was_interfaces_installed.changed == true)

- name: Notice that the next task will fail if root password was just changed
  debug:
    msg: "NOTE: next step will fail if the root password was changed in current run of Ansible. Will need to restart and enter correct password."
  when: (was_eth0_installed.changed == true) or (was_wlan0_installed.changed == true) or (was_interfaces_installed.changed == true)

- name: "Wait for network to come back after reboot: {{ inventory_hostname }}"
  local_action:
    wait_for host={{ inventory_hostname }} port=22 search_regex=OpenSSH state=started delay=10 connect_timeout=10 timeout=120
  become: false
  when: (was_eth0_installed.changed == true) or (was_wlan0_installed.changed == true) or (was_interfaces_installed.changed == true)

- name: Reset ufw to defaults but disabled
  ufw:
    state: reset

# Configure ip masquerading using UFW.
# https://help.ubuntu.com/lts/serverguide/firewall.html#ip-masquerading
- name: Set the ufw default forwarding policy
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^[# ]*DEFAULT_FORWARD_POLICY="
    line: DEFAULT_FORWARD_POLICY="ACCEPT"
    state: present

- name: Add ip masquerading rules to /etc/ufw/before.rules
  blockinfile:
    dest: /etc/ufw/before.rules
    block: |
      # nat Table rules
      *nat
      :POSTROUTING ACCEPT [0:0]

      # Forward traffic from wlan0 through eth0.
      -A POSTROUTING -s 192.168.222.0/24 -o eth0 -j MASQUERADE
      COMMIT
    insertbefore: "Don't delete these required lines, otherwise there will be errors"
    state: present

- name: Allow OpenSSH
  ufw:
    rule: allow
    name: OpenSSH

- name: Allow Nginx
  ufw:
    rule: allow
    name: Nginx Full

- name: Enable ufw
  ufw:
    state: enabled
