---

- name: Download autossh
  get_url:
    url: "http://www.harding.motd.ca/autossh/autossh-1.4e.tgz"
    dest: "{{ download_dir }}/autossh-1.4e.tgz"

- name: Unarchive autossh
  shell: /bin/tar -xzf {{ download_dir }}/autossh-1.4e.tgz --group=root --no-same-owner -C {{ download_dir }}
  args:
    creates: "{{ download_dir }}/autossh-1.4e/configure"

- name: Configure autossh
  shell: ./configure
  args:
    chdir: "{{ download_dir }}/autossh-1.4e"
    creates: "{{ download_dir }}/autossh-1.4e/Makefile"

- name: Make autossh
  shell: make
  args:
    chdir: "{{ download_dir }}/autossh-1.4e"
    creates: "{{ download_dir }}/autossh-1.4e/autossh"

- name: Install autossh
  shell: make install
  args:
    chdir: "{{ download_dir }}/autossh-1.4e"
    creates: "/usr/local/bin/autossh"

- name: Generate SSH key
  command: ssh-keygen -b 4096 -t rsa -N "" -f /root/.ssh/midwife-emr-support
  args:
    creates: /root/.ssh/midwife-emr-support.pub

- name: Generate a SHA1 hash of the public key
  shell: cat /root/.ssh/midwife-emr-support.pub |/usr/bin/openssl sha1|cut -d " " -f2
  register:
    midwife_emr_support_pub_sha1

- name: Fetch the public key and store on the host using a unique name
  fetch:
    src: /root/.ssh/midwife-emr-support.pub
    flat: yes
    fail_on_missing: yes
    dest: "/data/Projects/Midwife-EMR/AnsibleGeneratedOdroidPublicKeys/{{ midwife_emr_support_pub_sha1.stdout }}.pub"

- name: Notify that public key is stored on host
  debug:
    msg: "SSH public key stored here /data/Projects/Midwife-EMR/AnsibleGeneratedOdroidPublicKeys/{{ midwife_emr_support_pub_sha1.stdout }}.pub"

# Note: assumes that ~/.ssh/config is already populated with proper settings.
- name: Copy the public key to the remote server for installation
  local_action:
    command scp -i {{ ssh_id_for_remote_host }} /data/Projects/Midwife-EMR/AnsibleGeneratedOdroidPublicKeys/{{ midwife_emr_support_pub_sha1.stdout }}.pub {{ midwife_emr_support_remote_host }}:AnsibleGeneratedPublicKeys/
  become: no

- name: Copy the midwife-emr-support.service file into place
  template:
    src: roles/autossh/files/midwife-emr-support.j2
    dest: /etc/systemd/system/midwife-emr-support.service
    owner: root
    group: root
    mode: "u=rw,go=r"
  register: midwife_emr_support_service_installed

- name: Restart midwife-emr-support service periodically
  cron:
    name: "Restart midwife-emr-support service periodically"
    minute: "31"
    hour: "*/3"
    job: "/bin/systemctl restart midwife-emr-support.service"
    user: root
    cron_file: restart-midwife-emr-support

- name: Reload the systemd services as necessary
  command: /bin/systemctl daemon-reload
  when: midwife_emr_support_service_installed is defined and midwife_emr_support_service_installed.changed == True

- name: Enable the midwife-emr-support.service
  command: /bin/systemctl enable midwife-emr-support.service

- name: Start the midwife-emr-support.service
  command: /bin/systemctl start midwife-emr-support.service
